// Code generated by go-swagger; DO NOT EDIT.

package health

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/rfizzle/go-starter/pkg/schema"
)

// HealthReadinessOKCode is the HTTP code returned for type HealthReadinessOK
const HealthReadinessOKCode int = 200

/*
HealthReadinessOK success

swagger:response healthReadinessOK
*/
type HealthReadinessOK struct {
}

// NewHealthReadinessOK creates HealthReadinessOK with default headers values
func NewHealthReadinessOK() *HealthReadinessOK {

	return &HealthReadinessOK{}
}

// WriteResponse to the client
func (o *HealthReadinessOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// HealthReadinessServiceUnavailableCode is the HTTP code returned for type HealthReadinessServiceUnavailable
const HealthReadinessServiceUnavailableCode int = 503

/*
HealthReadinessServiceUnavailable Not available

swagger:response healthReadinessServiceUnavailable
*/
type HealthReadinessServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewHealthReadinessServiceUnavailable creates HealthReadinessServiceUnavailable with default headers values
func NewHealthReadinessServiceUnavailable() *HealthReadinessServiceUnavailable {

	return &HealthReadinessServiceUnavailable{}
}

// WithPayload adds the payload to the health readiness service unavailable response
func (o *HealthReadinessServiceUnavailable) WithPayload(payload *models.ErrorResponse) *HealthReadinessServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the health readiness service unavailable response
func (o *HealthReadinessServiceUnavailable) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HealthReadinessServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
