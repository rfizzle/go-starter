// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/rfizzle/go-starter/pkg/schema"
)

// AuthLoginV1OKCode is the HTTP code returned for type AuthLoginV1OK
const AuthLoginV1OKCode int = 200

/*
AuthLoginV1OK success

swagger:response authLoginV1OK
*/
type AuthLoginV1OK struct {

	/*
	  In: Body
	*/
	Payload *models.LoginRequest `json:"body,omitempty"`
}

// NewAuthLoginV1OK creates AuthLoginV1OK with default headers values
func NewAuthLoginV1OK() *AuthLoginV1OK {

	return &AuthLoginV1OK{}
}

// WithPayload adds the payload to the auth login v1 o k response
func (o *AuthLoginV1OK) WithPayload(payload *models.LoginRequest) *AuthLoginV1OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the auth login v1 o k response
func (o *AuthLoginV1OK) SetPayload(payload *models.LoginRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AuthLoginV1OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AuthLoginV1BadRequestCode is the HTTP code returned for type AuthLoginV1BadRequest
const AuthLoginV1BadRequestCode int = 400

/*
AuthLoginV1BadRequest Bad request

swagger:response authLoginV1BadRequest
*/
type AuthLoginV1BadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.FailureResponse `json:"body,omitempty"`
}

// NewAuthLoginV1BadRequest creates AuthLoginV1BadRequest with default headers values
func NewAuthLoginV1BadRequest() *AuthLoginV1BadRequest {

	return &AuthLoginV1BadRequest{}
}

// WithPayload adds the payload to the auth login v1 bad request response
func (o *AuthLoginV1BadRequest) WithPayload(payload *models.FailureResponse) *AuthLoginV1BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the auth login v1 bad request response
func (o *AuthLoginV1BadRequest) SetPayload(payload *models.FailureResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AuthLoginV1BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AuthLoginV1InternalServerErrorCode is the HTTP code returned for type AuthLoginV1InternalServerError
const AuthLoginV1InternalServerErrorCode int = 500

/*
AuthLoginV1InternalServerError Server error

swagger:response authLoginV1InternalServerError
*/
type AuthLoginV1InternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewAuthLoginV1InternalServerError creates AuthLoginV1InternalServerError with default headers values
func NewAuthLoginV1InternalServerError() *AuthLoginV1InternalServerError {

	return &AuthLoginV1InternalServerError{}
}

// WithPayload adds the payload to the auth login v1 internal server error response
func (o *AuthLoginV1InternalServerError) WithPayload(payload *models.ErrorResponse) *AuthLoginV1InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the auth login v1 internal server error response
func (o *AuthLoginV1InternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AuthLoginV1InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
