// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/rfizzle/go-starter/internal/schema"
)

// AuthLoginOKCode is the HTTP code returned for type AuthLoginOK
const AuthLoginOKCode int = 200

/*
AuthLoginOK success

swagger:response authLoginOK
*/
type AuthLoginOK struct {

	/*
	  In: Body
	*/
	Payload *schema.LoginRequest `json:"body,omitempty"`
}

// NewAuthLoginOK creates AuthLoginOK with default headers values
func NewAuthLoginOK() *AuthLoginOK {

	return &AuthLoginOK{}
}

// WithPayload adds the payload to the auth login o k response
func (o *AuthLoginOK) WithPayload(payload *schema.LoginRequest) *AuthLoginOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the auth login o k response
func (o *AuthLoginOK) SetPayload(payload *schema.LoginRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AuthLoginOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AuthLoginBadRequestCode is the HTTP code returned for type AuthLoginBadRequest
const AuthLoginBadRequestCode int = 400

/*
AuthLoginBadRequest Bad request

swagger:response authLoginBadRequest
*/
type AuthLoginBadRequest struct {

	/*
	  In: Body
	*/
	Payload *schema.FailureResponse `json:"body,omitempty"`
}

// NewAuthLoginBadRequest creates AuthLoginBadRequest with default headers values
func NewAuthLoginBadRequest() *AuthLoginBadRequest {

	return &AuthLoginBadRequest{}
}

// WithPayload adds the payload to the auth login bad request response
func (o *AuthLoginBadRequest) WithPayload(payload *schema.FailureResponse) *AuthLoginBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the auth login bad request response
func (o *AuthLoginBadRequest) SetPayload(payload *schema.FailureResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AuthLoginBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AuthLoginInternalServerErrorCode is the HTTP code returned for type AuthLoginInternalServerError
const AuthLoginInternalServerErrorCode int = 500

/*
AuthLoginInternalServerError Server error

swagger:response authLoginInternalServerError
*/
type AuthLoginInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *schema.ErrorResponse `json:"body,omitempty"`
}

// NewAuthLoginInternalServerError creates AuthLoginInternalServerError with default headers values
func NewAuthLoginInternalServerError() *AuthLoginInternalServerError {

	return &AuthLoginInternalServerError{}
}

// WithPayload adds the payload to the auth login internal server error response
func (o *AuthLoginInternalServerError) WithPayload(payload *schema.ErrorResponse) *AuthLoginInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the auth login internal server error response
func (o *AuthLoginInternalServerError) SetPayload(payload *schema.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AuthLoginInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
