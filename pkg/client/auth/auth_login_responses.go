// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/rfizzle/go-starter/pkg/schema"
)

// AuthLoginReader is a Reader for the AuthLogin structure.
type AuthLoginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuthLoginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAuthLoginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAuthLoginBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAuthLoginInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/v1/auth/login] AuthLogin", response, response.Code())
	}
}

// NewAuthLoginOK creates a AuthLoginOK with default headers values
func NewAuthLoginOK() *AuthLoginOK {
	return &AuthLoginOK{}
}

/*
AuthLoginOK describes a response with status code 200, with default header values.

success
*/
type AuthLoginOK struct {
	Payload *schema.LoginRequest
}

// IsSuccess returns true when this auth login o k response has a 2xx status code
func (o *AuthLoginOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this auth login o k response has a 3xx status code
func (o *AuthLoginOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this auth login o k response has a 4xx status code
func (o *AuthLoginOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this auth login o k response has a 5xx status code
func (o *AuthLoginOK) IsServerError() bool {
	return false
}

// IsCode returns true when this auth login o k response a status code equal to that given
func (o *AuthLoginOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the auth login o k response
func (o *AuthLoginOK) Code() int {
	return 200
}

func (o *AuthLoginOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/auth/login][%d] authLoginOK  %+v", 200, o.Payload)
}

func (o *AuthLoginOK) String() string {
	return fmt.Sprintf("[POST /api/v1/auth/login][%d] authLoginOK  %+v", 200, o.Payload)
}

func (o *AuthLoginOK) GetPayload() *schema.LoginRequest {
	return o.Payload
}

func (o *AuthLoginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(schema.LoginRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthLoginBadRequest creates a AuthLoginBadRequest with default headers values
func NewAuthLoginBadRequest() *AuthLoginBadRequest {
	return &AuthLoginBadRequest{}
}

/*
AuthLoginBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type AuthLoginBadRequest struct {
	Payload *schema.FailureResponse
}

// IsSuccess returns true when this auth login bad request response has a 2xx status code
func (o *AuthLoginBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this auth login bad request response has a 3xx status code
func (o *AuthLoginBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this auth login bad request response has a 4xx status code
func (o *AuthLoginBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this auth login bad request response has a 5xx status code
func (o *AuthLoginBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this auth login bad request response a status code equal to that given
func (o *AuthLoginBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the auth login bad request response
func (o *AuthLoginBadRequest) Code() int {
	return 400
}

func (o *AuthLoginBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/auth/login][%d] authLoginBadRequest  %+v", 400, o.Payload)
}

func (o *AuthLoginBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v1/auth/login][%d] authLoginBadRequest  %+v", 400, o.Payload)
}

func (o *AuthLoginBadRequest) GetPayload() *schema.FailureResponse {
	return o.Payload
}

func (o *AuthLoginBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(schema.FailureResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthLoginInternalServerError creates a AuthLoginInternalServerError with default headers values
func NewAuthLoginInternalServerError() *AuthLoginInternalServerError {
	return &AuthLoginInternalServerError{}
}

/*
AuthLoginInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type AuthLoginInternalServerError struct {
	Payload *schema.ErrorResponse
}

// IsSuccess returns true when this auth login internal server error response has a 2xx status code
func (o *AuthLoginInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this auth login internal server error response has a 3xx status code
func (o *AuthLoginInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this auth login internal server error response has a 4xx status code
func (o *AuthLoginInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this auth login internal server error response has a 5xx status code
func (o *AuthLoginInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this auth login internal server error response a status code equal to that given
func (o *AuthLoginInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the auth login internal server error response
func (o *AuthLoginInternalServerError) Code() int {
	return 500
}

func (o *AuthLoginInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/auth/login][%d] authLoginInternalServerError  %+v", 500, o.Payload)
}

func (o *AuthLoginInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v1/auth/login][%d] authLoginInternalServerError  %+v", 500, o.Payload)
}

func (o *AuthLoginInternalServerError) GetPayload() *schema.ErrorResponse {
	return o.Payload
}

func (o *AuthLoginInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(schema.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
